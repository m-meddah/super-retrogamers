#!/usr/bin/env tsx

import { prisma } from '../lib/prisma'
import { hash } from 'bcrypt'

async function fixCredentialAccount() {
  try {
    const email = 'admin@super-retrogamers.com'
    const password = 'admin123' // Mot de passe par d√©faut - √† changer apr√®s connexion
    
    console.log('üîÑ Correction du compte credential...')
    
    // Chercher l'utilisateur
    const user = await prisma.user.findUnique({
      where: { email },
      include: { accounts: true }
    })

    if (!user) {
      console.log('‚ùå Utilisateur non trouv√©')
      return
    }

    // V√©rifier s'il y a d√©j√† un compte credential
    const existingCredential = user.accounts.find(acc => acc.providerId === 'credential')
    
    if (existingCredential) {
      console.log('‚úÖ Un compte credential existe d√©j√†')
      return
    }

    // Hacher le mot de passe
    const hashedPassword = await hash(password, 12)
    
    // Cr√©er le compte credential
    await prisma.account.create({
      data: {
        userId: user.id,
        providerId: 'credential',
        accountId: email, // Pour les credentials, accountId = email
        password: hashedPassword,
      }
    })

    console.log('‚úÖ Compte credential cr√©√© avec succ√®s!')
    console.log(`üìß Email: ${email}`)
    console.log(`üîë Mot de passe: ${password}`)
    console.log('')
    console.log('‚ö†Ô∏è  IMPORTANT: Changez ce mot de passe apr√®s votre premi√®re connexion!')
    
  } catch (error) {
    console.error('‚ùå Erreur:', error)
  } finally {
    await prisma.$disconnect()
  }
}

fixCredentialAccount()